<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Serverless on Cloudant blog</title>
    <link>https://blog.cloudant.com/tags/serverless/</link>
    <description>Recent content in Serverless on Cloudant blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 Aug 2021 06:00:00 +0000</lastBuildDate><atom:link href="https://blog.cloudant.com/tags/serverless/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Code Engine &amp; Cloudant</title>
      <link>https://blog.cloudant.com/2021/08/16/Code-Engine-and-Cloudant.html</link>
      <pubDate>Mon, 16 Aug 2021 06:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2021/08/16/Code-Engine-and-Cloudant.html</guid>
      <description>One of the great advantages of cloud infrastructure is that it offers the option of trying things out at zero or near-zero cost.
You can spin up services, create applications and try them out. If they don’t work or don’t get traction, you simply deprovision the infrastructure and try something else. The barrier to innovation is thus significantly lowered.
In this post, we’ll take you through a basic scenario that combines two such IBM services to build a serverless polling application:</description>
    </item>
    
    <item>
      <title>GitHub Webhooks and Cloud Functions</title>
      <link>https://blog.cloudant.com/2021/02/08/GitHub-Webhooks-and-Cloud-Functions.html</link>
      <pubDate>Mon, 08 Feb 2021 06:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2021/02/08/GitHub-Webhooks-and-Cloud-Functions.html</guid>
      <description>Some GitHub repositories are not just source code for apps, they can also store data files holding JSON, YAML, XML or any other file format e.g.
A collection of reference data such as this countries of the world GeoJSON. &amp;ldquo;Infrastructure as code&amp;rdquo; files, such as Terraform configuration. In this blog post we&amp;rsquo;ll create an IBM Cloud Function that is triggered by a commit to a GitHub repository, which stores a copy of JSON data from GitHub in a Cloudant database.</description>
    </item>
    
    <item>
      <title>Automated Daily Backups</title>
      <link>https://blog.cloudant.com/2020/10/09/Automated-Daily-Backups.html</link>
      <pubDate>Fri, 09 Oct 2020 06:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2020/10/09/Automated-Daily-Backups.html</guid>
      <description>Cloudant is already reslient in that it stores data in triplicate across a region&amp;rsquo;s three availability zones but that&amp;rsquo;s not the same thing as having a backup:
what if you delete or modify a bunch of documents and wish to restore them later? (Note that you can access the previous revision of a document for a short time, but it will be eventually compacted so this behaviour isn&amp;rsquo;t to be relied upon).</description>
    </item>
    
    <item>
      <title>Building a CRM System</title>
      <link>https://blog.cloudant.com/2019/03/29/Building-a-CRM-System.html</link>
      <pubDate>Fri, 29 Mar 2019 06:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2019/03/29/Building-a-CRM-System.html</guid>
      <description>A Customer Relationship Management (CRM) system is simply a means of recording your business&amp;rsquo;s relations with your customers. It may consist of:
a searchable database of your customers, with the customer name, description and contact details. a time-ordered list of notes detailing the interactions you have had with the customer. a list of contact details of the people you have relationships with at that company. It may also store other &amp;ldquo;per customer&amp;rdquo; objects e.</description>
    </item>
    
    <item>
      <title>Optimising Cloudant for Serverless</title>
      <link>https://blog.cloudant.com/2018/06/14/Optimising-Cloudant-for-Serverless.html</link>
      <pubDate>Thu, 14 Jun 2018 06:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2018/06/14/Optimising-Cloudant-for-Serverless.html</guid>
      <description>IBM Cloudant is a great fit for serverless applications - build a JSON document in the schema of your choice and post it to a Cloudant database using the HTTP API. Both IBM Cloud Functions and IBM Cloudant can scale to deal with your application&amp;rsquo;s workload without you worrying about operating systems, machine reboots, queues, networking etc.
Building a serverless application makes you think differently about how to optimise for performance:</description>
    </item>
    
    <item>
      <title>Detaching attachments</title>
      <link>https://blog.cloudant.com/2017/12/21/Detaching-Attachments-with-Serverless.html</link>
      <pubDate>Thu, 21 Dec 2017 09:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2017/12/21/Detaching-Attachments-with-Serverless.html</guid>
      <description>Imagine we have an app that collects geo-coded photographs. We give the app to thousands of students and ask them to collect pictures of storefronts, together with the company name and data from the phone&amp;rsquo;s GPS. Using the latitude and longitude, the company name, and the photograph we intend to crowd-source a business directory.
Our app is based on Offline First design principles. It stores its data locally on the mobile device, syncing to the cloud when there is a decent connection.</description>
    </item>
    
    <item>
      <title>Using your own domain</title>
      <link>https://blog.cloudant.com/2017/12/07/Using-your-own-domain-name.html</link>
      <pubDate>Thu, 07 Dec 2017 09:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2017/12/07/Using-your-own-domain-name.html</guid>
      <description>Until recently, Cloudant allowed you to bring your own domain name through its &amp;ldquo;virtual hosts&amp;rdquo; functionality. This feature is now being removed for security reasons.
If you still want to be able to access the Cloudant API through your own domain name, you can do it by creating a serverless proxy that is hosted on IBM Cloud Functions, IBM&amp;rsquo;s serverless platform.
A number of serverless &amp;ldquo;actions&amp;rdquo; are deployed—one per API call you need to proxy.</description>
    </item>
    
    <item>
      <title>Elasticsearch hybrid</title>
      <link>https://blog.cloudant.com/2017/11/30/Making-a-Cloudant-ElasticSearch-hybird.html</link>
      <pubDate>Thu, 30 Nov 2017 09:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2017/11/30/Making-a-Cloudant-ElasticSearch-hybird.html</guid>
      <description>On the face of it, IBM Cloudant and Elasticsearch seem to be very similar products. They both:
Store JSON documents without you needing to define a schema up-front. Have an HTTP API. &amp;ldquo;Shard&amp;rdquo; each collection into pieces and store multiple copies across a distributed cluster. Can be used to perform &amp;ldquo;free text&amp;rdquo; search, i.e., query which documents best match a supplied string. Cloudant is a resilient database that guarantees that data is stored on disk on multiple nodes when you write your data.</description>
    </item>
    
    <item>
      <title>Tracking cryptocurrencies</title>
      <link>https://blog.cloudant.com/2017/11/16/track-cryptocurrency-with-serverless.html</link>
      <pubDate>Thu, 16 Nov 2017 09:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2017/11/16/track-cryptocurrency-with-serverless.html</guid>
      <description>Tracking your cryptocurrency portfolio with serverless functions &amp;amp; Cloudant Monitor the value of your bitcoin hoard with serverless Cloud Functions writing data to Cloudant
The value of crypto-currencies can vary greatly over time. If you&amp;rsquo;re lucky, some coins bought for a handful of dollars a few years ago can be worth thousands of dollars now.
There are many websites and apps that can help you monitor your portfolio, but what&amp;rsquo;s the fun in using a ready-made solution when you can build your own?</description>
    </item>
    
    <item>
      <title>Cloudant Envoy</title>
      <link>https://blog.cloudant.com/2017/10/05/Cloudant-Envoy-serverless-edition.html</link>
      <pubDate>Thu, 05 Oct 2017 09:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2017/10/05/Cloudant-Envoy-serverless-edition.html</guid>
      <description>Cloudant Envoy is software that sits between mobile users and a Cloudant database. It allows the apps to follow the CouchDB &amp;ldquo;one-database-per-user&amp;rdquo; model on mobile devices, while storing the data in a single server-side database. Without Envoy, each mobile user would have their own server-side database, which makes querying data across users very tricky.
Envoy&amp;rsquo;s trick is to act as a proxy, seamlessly modifying the HTTP API calls heading for the Cloudant service:</description>
    </item>
    
    <item>
      <title>Custom Indexers</title>
      <link>https://blog.cloudant.com/2017/09/26/Custom-indexers-for-Cloudant.html</link>
      <pubDate>Tue, 26 Sep 2017 09:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2017/09/26/Custom-indexers-for-Cloudant.html</guid>
      <description>Cloudant offers highly available storage and retrieval of JSON documents across a cluster of computing which includes a primary index on the documents&amp;rsquo; _id field. You can also use the same cluster to power secondary indexes built to provide selection &amp;amp; aggregation using MapReduce, full-text search using Apache Lucene, or GeoSpatial queries.
What if you want something a little different that isn&amp;rsquo;t supported by the built-in indexers? You can build you own!</description>
    </item>
    
    <item>
      <title>Custom Replication</title>
      <link>https://blog.cloudant.com/2017/08/22/Custom-Cloudant-replication.html</link>
      <pubDate>Tue, 22 Aug 2017 09:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2017/08/22/Custom-Cloudant-replication.html</guid>
      <description>Cloudant has first-class replication built in. A database can be replicated to another local database or to a remote Cloudant instance—or to any other database that speaks the same replication protocol, such as Apache CouchDB™ or PouchDB. A replication process can be one-shot or continuous, and replication streams can be &amp;ldquo;filtered&amp;rdquo;, i.e. the documents that are replicated can be a subset of the total.
Not all applications need replication. It is essential when there are multiple, disconnected copies of the data where the data can be modified on either side.</description>
    </item>
    
    <item>
      <title>Piecemeal, Bulk or Batch</title>
      <link>https://blog.cloudant.com/2017/07/25/Piecemeal-Bulk-or-Batch.html</link>
      <pubDate>Tue, 25 Jul 2017 09:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2017/07/25/Piecemeal-Bulk-or-Batch.html</guid>
      <description>There are many different deployment models for CouchDB-style databases, but thankfully CRUD operations work the same across all of them. Apache CouchDB™ is a database, specifically a JSON document store, with an HTTP API. IBM Cloudant is Apache CouchDB with a few extra bells and whistles run as-a-service in pay-as-you go, dedicated and local configurations.
In this article, I&amp;rsquo;m going to explain your options for writing data using the CouchDB API, the different calls, and the tradeoffs therein.</description>
    </item>
    
    <item>
      <title>Build a serverless web app</title>
      <link>https://blog.cloudant.com/2017/02/27/Online-petition-system.html</link>
      <pubDate>Mon, 27 Feb 2017 09:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2017/02/27/Online-petition-system.html</guid>
      <description>Is it possible to create a web application that collects data from a web form without using any servers? Of course not, but you would be forgiven for thinking that when reading the word &amp;ldquo;serverless&amp;rdquo;. &amp;ldquo;Serverless&amp;rdquo; means that instead of having fixed numbers of dedicated machines sitting in data centres waiting for traffic to come in, we can supply the code that handles a single piece of work (e.g. the submission of a web form) to a an application framework like IBM Cloud Functions and let it scale out the computing power required.</description>
    </item>
    
  </channel>
</rss>
