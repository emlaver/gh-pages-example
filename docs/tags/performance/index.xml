<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Performance on My New Hugo Site</title>
    <link>https://emlaver.github.io/gh-pages-example/tags/performance/</link>
    <description>Recent content in Performance on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://emlaver.github.io/gh-pages-example/tags/performance/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Projection</title>
      <link>https://emlaver.github.io/gh-pages-example/2021/11/12/Projection.html</link>
      <pubDate>Fri, 12 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://emlaver.github.io/gh-pages-example/2021/11/12/Projection.html</guid>
      <description>Cloudant&amp;rsquo;s MapReduce indexes give you complete control over what data from your primary JSON objects are stored in your secondary indexes. JavaScript functions are used to programmatically decide which document attributes are selected for inclusion as either the key or the value of the views - the JavaScript functions can even be used to process the data before it&amp;rsquo;s saved in the index.
Photo by Jeremy Yap on Unsplash
In this blog post we&amp;rsquo;ll look at a technique called projection which produces the fastest, most efficient data selection indexes.</description>
    </item>
    
    <item>
      <title>Timing HTTP Requests</title>
      <link>https://emlaver.github.io/gh-pages-example/2019/12/06/Timing-HTTP-Requests-in-Nodejs.html</link>
      <pubDate>Fri, 06 Dec 2019 06:00:00 +0000</pubDate>
      
      <guid>https://emlaver.github.io/gh-pages-example/2019/12/06/Timing-HTTP-Requests-in-Nodejs.html</guid>
      <description>Building a Cloudant-based application with Node.js means that your app will making many HTTP requests to your Cloudant service. It&amp;rsquo;s important to understand how such HTTP traffic is coordinated in Node and to be able to measure the anatomy of each request so that you can measure latencies and eliminate unwanted delays.
Photo by John Barkiple on Unsplash
In this post we&amp;rsquo;ll be using the Official Node.js Cloudant library, exploring HTTP connection pooling and finding out how to instrument your Node.</description>
    </item>
    
  </channel>
</rss>
