<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>COS on Cloudant blog</title>
    <link>https://blog.cloudant.com/tags/cos/</link>
    <description>Recent content in COS on Cloudant blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 May 2019 06:00:00 +0000</lastBuildDate><atom:link href="https://blog.cloudant.com/tags/cos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Scheduled Cloudant Backups</title>
      <link>https://blog.cloudant.com/2019/05/16/Scheduled-Cloudant-Backups.html</link>
      <pubDate>Wed, 15 May 2019 06:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2019/05/16/Scheduled-Cloudant-Backups.html</guid>
      <description>The Couchbackup project provides a simple command-line tool to backup a Cloudant database to a file. From there it can uploaded to IBM Cloud Object Storage for archival.
# backup a single database to a file couchbackup --db mydatabase &amp;gt; mydatabase.txt # copy the file to Object Storage aws --endpoint-url=$ENDPOINT \ s3 cp mydatabase.txt s3://mycloudantbackups/ As well a command-line tool, couchbackup can also be used as a Node.js library so that you can script your own workflows to suit your application.</description>
    </item>
    
    <item>
      <title>Analysing Backups with SQL Query</title>
      <link>https://blog.cloudant.com/2019/04/23/Analysing-Cloudant-Backups-with-SQL-Query.html</link>
      <pubDate>Tue, 23 Apr 2019 06:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2019/04/23/Analysing-Cloudant-Backups-with-SQL-Query.html</guid>
      <description>In this post we discussed storing time-series data in time-boxed Cloudant databases to allow recent data to be stored in Cloudant and older data to be archived and deleted from Cloudant. In this post we&amp;rsquo;ll examine how to query data that has been archived and backed up to Object Storage using the IBM SQL Query service.
Object storage is much cheaper per gigabyte than a database, is endlessly extensible and makes a great choice for storing backups and archived data.</description>
    </item>
    
  </channel>
</rss>
