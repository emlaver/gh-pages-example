<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Conflicts on Cloudant blog</title>
    <link>https://blog.cloudant.com/tags/conflicts/</link>
    <description>Recent content in Conflicts on Cloudant blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 Nov 2020 06:00:00 +0000</lastBuildDate><atom:link href="https://blog.cloudant.com/tags/conflicts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Repairing a database with conflicts</title>
      <link>https://blog.cloudant.com/2020/11/26/Repairing-a-Database-With-Conflicts.html</link>
      <pubDate>Thu, 26 Nov 2020 06:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2020/11/26/Repairing-a-Database-With-Conflicts.html</guid>
      <description>Cloudant conflicts occur when disconnected replicas of a database are updated in different ways at the same time. The replicas could be:
Copies of a database hosted in different regions that are replicating continuously to each other, while both accepting writes. A mobile application going offline and replicating its updates to the cloud later, only to find that some of its changes clash with the cloud-based copy. Copies of the same database shard in a single-region cluster.</description>
    </item>
    
    <item>
      <title>Conflicts</title>
      <link>https://blog.cloudant.com/2018/07/25/Removing-Conflicts.html</link>
      <pubDate>Wed, 25 Jul 2018 06:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2018/07/25/Removing-Conflicts.html</guid>
      <description>Conflicts occur in Cloudant and Apache CouchDB databases when the same document is written to in different ways in separate copies of the database. This can occur when there is:
a mobile app and a server-side replica and the data is replicated between them. two databases that are replicated together. a single, multi-node database that receives mulitple writes to the same document at the same time. Although the database will try to prevent conflicts happening in this circumstance by returning an HTTP 409 response, conflicts may still arise in some circumstancces.</description>
    </item>
    
    <item>
      <title>Introduction to Conflicts - 3/3</title>
      <link>https://blog.cloudant.com/2015/01/26/Introduction-to-Conflicts-Part-Three.html</link>
      <pubDate>Mon, 26 Jan 2015 09:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2015/01/26/Introduction-to-Conflicts-Part-Three.html</guid>
      <description>In Parts One and Two of this series, we looked at:
what are document conflicts in Cloudant? how do they arise? what does a conflict look like? the consequences of conflicts how to detect conflicts singly and in bulk how to resolve conflicts If your application replicates data between Cloudant and mobile device and the data is allowed to be modified (like an email inbox), then conflicts will arise in your application when the two replicas are combined, and the resolution of those conflicts is your application&amp;rsquo;s responsibility.</description>
    </item>
    
    <item>
      <title>Introduction to Conflicts - 2/3</title>
      <link>https://blog.cloudant.com/2015/01/20/Introduction-to-Conflicts-Part-Two.html</link>
      <pubDate>Tue, 20 Jan 2015 09:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2015/01/20/Introduction-to-Conflicts-Part-Two.html</guid>
      <description>In Part One of this series we looked at:
what are document conflicts in Cloudant? how do they arise? what does a conflict look like? the consequences of conflicts In this blog we will discuss how we can detect conflicts and how we should go about resolving them.
Conflicts are most often a natural side-effect of having a distributed database architecture. Conflicts retain the history of a document, keeping versions of a document that has been modified in different ways on two independent systems (e.</description>
    </item>
    
    <item>
      <title>Introduction to Conflicts - 1/3</title>
      <link>https://blog.cloudant.com/2015/01/12/Introduction-to-Conflicts-Part-One.html</link>
      <pubDate>Mon, 12 Jan 2015 09:00:00 +0000</pubDate>
      
      <guid>https://blog.cloudant.com/2015/01/12/Introduction-to-Conflicts-Part-One.html</guid>
      <description>This is the first of a three-part blog series on how to deal with conflicts in the IBM Cloudant JSON document store. This blog assumes you have a working knowledge of Cloudant&amp;rsquo;s database, and its API.
In part one, we introduce the concept of a document conflict, describe what it looks like, and explain what happens if conflicts are left unresolved. Later in this series, we show how to tidy up conflicts, and discuss how they can be avoided.</description>
    </item>
    
  </channel>
</rss>
